@*@model IEnumerable<MVC.Entidades.Estado>*@
@using PagedList.Mvc
@model PagedList.IPagedList<MVC.Entidades.Estado>

@{
    ViewBag.Title = "Estado";
}

<h2>Estados</h2>
<p>
    @Html.ActionLink("Agregar", "Create", null, new { @class = "btn btn-default" })
</p>

<div class="row">
    
</div>
<div class="row">

    @* utilizamos el siguinte codigo para crear un cuadro de busqueda*@
    <div class="input-group">
        @using (Html.BeginForm("Index", "Estados", FormMethod.Get, new { @class = "form-inline" }))
        {
            <div class="input-group">
                @Html.TextBox("search", ViewBag.CurrentSearch as string, new { @class = "form-control", placeholder = "Escriba la busqueda", aria_discribedy = "basic-addon2" })
                <span class="input-group-btn">
                    <button type="submit" class="btn btn-primary">Buscar</button>
                </span>
            </div>

        }

    </div>


    @* ahora estructuramos la tabla de los datos*@

    <table class="table table-hover">
        @*Declaramos el encabezado*@
        <thead>
            <tr>
                <th>
                    @Html.ActionLink("Nombre", "Index", new { sort = ViewBag.EstadoSort, search = ViewBag.CurrentSearch })
                    @* @Html.DisplayNameFor(model => model.Nombre)*@
                </th>
                <th></th>
            </tr>
        </thead>
        @* Ahora declaramos el cuerpo que es solo un foreach que recorre todo el modelo*@

        <tbody>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Descripcion)
                    </td>
                    <td>
                        @Html.ActionLink("Editar", "Edit", new { id = item.ID }) |
                        @Html.ActionLink("Detalles", "Details", new { id = item.ID }) |
                        @Html.ActionLink("Borrar", "Delete", new { id = item.ID })
                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>

@* Codigo para la paginacion*@

Pagina @(Model.PageCount < Model.PageNumber ? 0
        : Model.PageNumber) de @Model.PageCount

        @Html.PagedListPager(Model, Page =>
  Url.Action("Index", new
  {
      sort = ViewBag.CurrentSort,
      search = ViewBag.CurrentSearch,
      Page
  }))
